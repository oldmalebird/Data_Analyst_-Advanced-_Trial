<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0706.1237                               -->
<workbook original-version='18.1' source-build='2018.1.3 (20181.18.0706.1237)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='battles' inline='true' name='federated.1h8fquv0bcnftl1bk8m0s19gattm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='battles' name='textscan.1laxubw00lwf4j1cx0u570j533by'>
            <connection class='textscan' directory='C:/Users/MaleBird/Desktop/MaterialAboutIceAndFire-master/Project_IceAndFire' filename='battles.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1laxubw00lwf4j1cx0u570j533by' name='battles.csv' table='[battles#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='integer' name='battle_number' ordinal='2' />
            <column datatype='string' name='attacker_king' ordinal='3' />
            <column datatype='string' name='defender_king' ordinal='4' />
            <column datatype='string' name='attacker_1' ordinal='5' />
            <column datatype='string' name='attacker_2' ordinal='6' />
            <column datatype='string' name='attacker_3' ordinal='7' />
            <column datatype='string' name='attacker_4' ordinal='8' />
            <column datatype='string' name='defender_1' ordinal='9' />
            <column datatype='string' name='defender_2' ordinal='10' />
            <column datatype='string' name='defender_3' ordinal='11' />
            <column datatype='string' name='defender_4' ordinal='12' />
            <column datatype='string' name='attacker_outcome' ordinal='13' />
            <column datatype='string' name='battle_type' ordinal='14' />
            <column datatype='integer' name='major_death' ordinal='15' />
            <column datatype='integer' name='major_capture' ordinal='16' />
            <column datatype='integer' name='attacker_size' ordinal='17' />
            <column datatype='integer' name='defender_size' ordinal='18' />
            <column datatype='string' name='attacker_commander' ordinal='19' />
            <column datatype='string' name='defender_commander' ordinal='20' />
            <column datatype='integer' name='summer' ordinal='21' />
            <column datatype='string' name='location' ordinal='22' />
            <column datatype='string' name='region' ordinal='23' />
            <column datatype='string' name='note' ordinal='24' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[battles.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;ï¿¥&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[battles.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[battles.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>battle_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[battle_number]</local-name>
            <parent-name>[battles.csv]</parent-name>
            <remote-alias>battle_number</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attacker_king</remote-name>
            <remote-type>129</remote-type>
            <local-name>[attacker_king]</local-name>
            <parent-name>[battles.csv]</parent-name>
            <remote-alias>attacker_king</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>defender_king</remote-name>
            <remote-type>129</remote-type>
            <local-name>[defender_king]</local-name>
            <parent-name>[battles.csv]</parent-name>
            <remote-alias>defender_king</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attacker_1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[attacker_1]</local-name>
            <parent-name>[battles.csv]</parent-name>
            <remote-alias>attacker_1</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attacker_2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[attacker_2]</local-name>
            <parent-name>[battles.csv]</parent-name>
            <remote-alias>attacker_2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attacker_3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[attacker_3]</local-name>
            <parent-name>[battles.csv]</parent-name>
            <remote-alias>attacker_3</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attacker_4</remote-name>
            <remote-type>129</remote-type>
            <local-name>[attacker_4]</local-name>
            <parent-name>[battles.csv]</parent-name>
            <remote-alias>attacker_4</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>defender_1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[defender_1]</local-name>
            <parent-name>[battles.csv]</parent-name>
            <remote-alias>defender_1</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>defender_2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[defender_2]</local-name>
            <parent-name>[battles.csv]</parent-name>
            <remote-alias>defender_2</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>defender_3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[defender_3]</local-name>
            <parent-name>[battles.csv]</parent-name>
            <remote-alias>defender_3</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>defender_4</remote-name>
            <remote-type>129</remote-type>
            <local-name>[defender_4]</local-name>
            <parent-name>[battles.csv]</parent-name>
            <remote-alias>defender_4</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attacker_outcome</remote-name>
            <remote-type>129</remote-type>
            <local-name>[attacker_outcome]</local-name>
            <parent-name>[battles.csv]</parent-name>
            <remote-alias>attacker_outcome</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>battle_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[battle_type]</local-name>
            <parent-name>[battles.csv]</parent-name>
            <remote-alias>battle_type</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>major_death</remote-name>
            <remote-type>20</remote-type>
            <local-name>[major_death]</local-name>
            <parent-name>[battles.csv]</parent-name>
            <remote-alias>major_death</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>major_capture</remote-name>
            <remote-type>20</remote-type>
            <local-name>[major_capture]</local-name>
            <parent-name>[battles.csv]</parent-name>
            <remote-alias>major_capture</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attacker_size</remote-name>
            <remote-type>20</remote-type>
            <local-name>[attacker_size]</local-name>
            <parent-name>[battles.csv]</parent-name>
            <remote-alias>attacker_size</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>defender_size</remote-name>
            <remote-type>20</remote-type>
            <local-name>[defender_size]</local-name>
            <parent-name>[battles.csv]</parent-name>
            <remote-alias>defender_size</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attacker_commander</remote-name>
            <remote-type>129</remote-type>
            <local-name>[attacker_commander]</local-name>
            <parent-name>[battles.csv]</parent-name>
            <remote-alias>attacker_commander</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>defender_commander</remote-name>
            <remote-type>129</remote-type>
            <local-name>[defender_commander]</local-name>
            <parent-name>[battles.csv]</parent-name>
            <remote-alias>defender_commander</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>summer</remote-name>
            <remote-type>20</remote-type>
            <local-name>[summer]</local-name>
            <parent-name>[battles.csv]</parent-name>
            <remote-alias>summer</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[battles.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[battles.csv]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>note</remote-name>
            <remote-type>129</remote-type>
            <local-name>[note]</local-name>
            <parent-name>[battles.csv]</parent-name>
            <remote-alias>note</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Median' caption='AttackerSiza/DefenderSize' datatype='real' name='[Calculation_1068760508914176000]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[attacker_size]/[defender_size]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Median' datatype='integer' name='[attacker_size]' role='measure' type='quantitative' />
      <column datatype='integer' name='[battle_number]' role='dimension' type='ordinal' />
      <column aggregation='Median' datatype='integer' name='[defender_size]' role='measure' type='quantitative' />
      <column datatype='integer' name='[year]' role='dimension' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.686869' measure-ordering='alphabetic' measure-percentage='0.313131' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name=' Region'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>The Northå¨èµ¢&#10;The Riverlandsç¡¬å¤è¾å°</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='battles' name='federated.1h8fquv0bcnftl1bk8m0s19gattm' />
          </datasources>
          <datasource-dependencies datasource='federated.1h8fquv0bcnftl1bk8m0s19gattm'>
            <column datatype='string' name='[attacker_outcome]' role='dimension' type='nominal' />
            <column-instance column='[attacker_outcome]' derivation='Count' name='[cnt:attacker_outcome:qk]' pivot='key' type='quantitative' />
            <column-instance column='[attacker_outcome]' derivation='None' name='[none:attacker_outcome:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[region]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[cnt:attacker_outcome:qk]</rows>
        <cols>([federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:region:nk] / [federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_outcome:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='A/D Size'>
      <table>
        <view>
          <datasources>
            <datasource caption='battles' name='federated.1h8fquv0bcnftl1bk8m0s19gattm' />
          </datasources>
          <datasource-dependencies datasource='federated.1h8fquv0bcnftl1bk8m0s19gattm'>
            <column aggregation='Median' caption='AttackerSiza/DefenderSize' datatype='real' name='[Calculation_1068760508914176000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[attacker_size]/[defender_size]' />
            </column>
            <column datatype='string' name='[attacker_outcome]' role='dimension' type='nominal' />
            <column aggregation='Median' datatype='integer' name='[attacker_size]' role='measure' type='quantitative' />
            <column datatype='string' name='[battle_type]' role='dimension' type='nominal' />
            <column aggregation='Median' datatype='integer' name='[defender_size]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1068760508914176000]' derivation='Median' name='[med:Calculation_1068760508914176000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[attacker_outcome]' derivation='None' name='[none:attacker_outcome:nk]' pivot='key' type='nominal' />
            <column-instance column='[battle_type]' derivation='None' name='[none:battle_type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[med:Calculation_1068760508914176000:qk]</rows>
        <cols>([federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:battle_type:nk] / [federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_outcome:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='A/D è¡¨æ ¼'>
      <table>
        <view>
          <datasources>
            <datasource caption='battles' name='federated.1h8fquv0bcnftl1bk8m0s19gattm' />
          </datasources>
          <datasource-dependencies datasource='federated.1h8fquv0bcnftl1bk8m0s19gattm'>
            <column aggregation='Median' caption='AttackerSiza/DefenderSize' datatype='real' name='[Calculation_1068760508914176000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[attacker_size]/[defender_size]' />
            </column>
            <column datatype='string' name='[attacker_outcome]' role='dimension' type='nominal' />
            <column aggregation='Median' datatype='integer' name='[attacker_size]' role='measure' type='quantitative' />
            <column datatype='string' name='[battle_type]' role='dimension' type='nominal' />
            <column aggregation='Median' datatype='integer' name='[defender_size]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1068760508914176000]' derivation='Median' name='[med:Calculation_1068760508914176000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[attacker_size]' derivation='Median' name='[med:attacker_size:qk]' pivot='key' type='quantitative' />
            <column-instance column='[defender_size]' derivation='Median' name='[med:defender_size:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[attacker_outcome]' derivation='None' name='[none:attacker_outcome:nk]' pivot='key' type='nominal' />
            <column-instance column='[attacker_size]' derivation='None' name='[none:attacker_size:qk]' pivot='key' type='quantitative' />
            <column-instance column='[battle_type]' derivation='None' name='[none:battle_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[defender_size]' derivation='None' name='[none:defender_size:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1h8fquv0bcnftl1bk8m0s19gattm].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1h8fquv0bcnftl1bk8m0s19gattm].[med:Calculation_1068760508914176000:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1h8fquv0bcnftl1bk8m0s19gattm].[med:attacker_size:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1h8fquv0bcnftl1bk8m0s19gattm].[med:defender_size:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_size:qk]' included-values='in-range'>
            <min>100</min>
            <max>100000</max>
          </filter>
          <filter class='quantitative' column='[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:defender_size:qk]' included-values='in-range'>
            <min>100</min>
            <max>20000</max>
          </filter>
          <slices>
            <column>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:defender_size:qk]</column>
            <column>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_size:qk]</column>
            <column>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1h8fquv0bcnftl1bk8m0s19gattm].[med:Calculation_1068760508914176000:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1h8fquv0bcnftl1bk8m0s19gattm].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_outcome:nk] / ([federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:name:nk] / [federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:battle_type:nk]))</rows>
        <cols>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='A/D è¡¨æ ¼ (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='battles' name='federated.1h8fquv0bcnftl1bk8m0s19gattm' />
          </datasources>
          <datasource-dependencies datasource='federated.1h8fquv0bcnftl1bk8m0s19gattm'>
            <column aggregation='Median' datatype='integer' name='[attacker_size]' role='measure' type='quantitative' />
            <column datatype='string' name='[battle_type]' role='dimension' type='nominal' />
            <column aggregation='Median' datatype='integer' name='[defender_size]' role='measure' type='quantitative' />
            <column-instance column='[attacker_size]' derivation='Median' name='[med:attacker_size:qk]' pivot='key' type='quantitative' />
            <column-instance column='[defender_size]' derivation='Median' name='[med:defender_size:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[attacker_size]' derivation='None' name='[none:attacker_size:qk]' pivot='key' type='quantitative' />
            <column-instance column='[battle_type]' derivation='None' name='[none:battle_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[defender_size]' derivation='None' name='[none:defender_size:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_size:qk]' included-values='in-range'>
            <min>100</min>
            <max>100000</max>
          </filter>
          <filter class='quantitative' column='[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:defender_size:qk]' included-values='in-range'>
            <min>100</min>
            <max>20000</max>
          </filter>
          <slices>
            <column>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:defender_size:qk]</column>
            <column>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_size:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:name:nk]' />
              <shape column='[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:battle_type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[med:attacker_size:qk]</rows>
        <cols>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[med:defender_size:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='A/D è¡¨æ ¼ (3)'>
      <table>
        <view>
          <datasources>
            <datasource caption='battles' name='federated.1h8fquv0bcnftl1bk8m0s19gattm' />
          </datasources>
          <datasource-dependencies datasource='federated.1h8fquv0bcnftl1bk8m0s19gattm'>
            <column aggregation='Median' caption='AttackerSiza/DefenderSize' datatype='real' name='[Calculation_1068760508914176000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[attacker_size]/[defender_size]' />
            </column>
            <column datatype='string' name='[attacker_outcome]' role='dimension' type='nominal' />
            <column aggregation='Median' datatype='integer' name='[attacker_size]' role='measure' type='quantitative' />
            <column datatype='string' name='[battle_type]' role='dimension' type='nominal' />
            <column aggregation='Median' datatype='integer' name='[defender_size]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1068760508914176000]' derivation='Median' name='[med:Calculation_1068760508914176000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[attacker_size]' derivation='Median' name='[med:attacker_size:qk]' pivot='key' type='quantitative' />
            <column-instance column='[defender_size]' derivation='Median' name='[med:defender_size:qk]' pivot='key' type='quantitative' />
            <column-instance column='[attacker_outcome]' derivation='None' name='[none:attacker_outcome:nk]' pivot='key' type='nominal' />
            <column-instance column='[attacker_size]' derivation='None' name='[none:attacker_size:qk]' pivot='key' type='quantitative' />
            <column-instance column='[battle_type]' derivation='None' name='[none:battle_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[defender_size]' derivation='None' name='[none:defender_size:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1h8fquv0bcnftl1bk8m0s19gattm].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1h8fquv0bcnftl1bk8m0s19gattm].[med:Calculation_1068760508914176000:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1h8fquv0bcnftl1bk8m0s19gattm].[med:attacker_size:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1h8fquv0bcnftl1bk8m0s19gattm].[med:defender_size:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_size:qk]' included-values='in-range'>
            <min>100</min>
            <max>100000</max>
          </filter>
          <filter class='quantitative' column='[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:defender_size:qk]' included-values='in-range'>
            <min>100</min>
            <max>20000</max>
          </filter>
          <slices>
            <column>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:defender_size:qk]</column>
            <column>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_size:qk]</column>
            <column>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1h8fquv0bcnftl1bk8m0s19gattm].[med:Calculation_1068760508914176000:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1h8fquv0bcnftl1bk8m0s19gattm].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_outcome:nk] / [federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:battle_type:nk])</rows>
        <cols>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='AttackerSize'>
      <table>
        <view>
          <datasources>
            <datasource caption='battles' name='federated.1h8fquv0bcnftl1bk8m0s19gattm' />
          </datasources>
          <datasource-dependencies datasource='federated.1h8fquv0bcnftl1bk8m0s19gattm'>
            <column datatype='string' name='[attacker_outcome]' role='dimension' type='nominal' />
            <column aggregation='Median' datatype='integer' name='[attacker_size]' role='measure' type='quantitative' />
            <column-instance column='[attacker_size]' derivation='Median' name='[med:attacker_size:qk]' pivot='key' type='quantitative' />
            <column-instance column='[attacker_outcome]' derivation='None' name='[none:attacker_outcome:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1h8fquv0bcnftl1bk8m0s19gattm].[med:attacker_size:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_outcome:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='BattleType'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>ambushårazingå¨è</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='battles' name='federated.1h8fquv0bcnftl1bk8m0s19gattm' />
          </datasources>
          <datasource-dependencies datasource='federated.1h8fquv0bcnftl1bk8m0s19gattm'>
            <column datatype='string' name='[attacker_outcome]' role='dimension' type='nominal' />
            <column datatype='string' name='[battle_type]' role='dimension' type='nominal' />
            <column-instance column='[attacker_outcome]' derivation='Count' name='[cnt:attacker_outcome:qk]' pivot='key' type='quantitative' />
            <column-instance column='[attacker_outcome]' derivation='None' name='[none:attacker_outcome:nk]' pivot='key' type='nominal' />
            <column-instance column='[battle_type]' derivation='None' name='[none:battle_type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_outcome:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[cnt:attacker_outcome:qk]</rows>
        <cols>([federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:battle_type:nk] / [federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_outcome:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='DefenderSize'>
      <table>
        <view>
          <datasources>
            <datasource caption='battles' name='federated.1h8fquv0bcnftl1bk8m0s19gattm' />
          </datasources>
          <datasource-dependencies datasource='federated.1h8fquv0bcnftl1bk8m0s19gattm'>
            <column datatype='string' name='[attacker_outcome]' role='dimension' type='nominal' />
            <column aggregation='Median' datatype='integer' name='[defender_size]' role='measure' type='quantitative' />
            <column-instance column='[defender_size]' derivation='Median' name='[med:defender_size:qk]' pivot='key' type='quantitative' />
            <column-instance column='[attacker_outcome]' derivation='None' name='[none:attacker_outcome:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1h8fquv0bcnftl1bk8m0s19gattm].[med:defender_size:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_outcome:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Location'>
      <table>
        <view>
          <datasources>
            <datasource caption='battles' name='federated.1h8fquv0bcnftl1bk8m0s19gattm' />
          </datasources>
          <datasource-dependencies datasource='federated.1h8fquv0bcnftl1bk8m0s19gattm'>
            <column datatype='string' name='[attacker_outcome]' role='dimension' type='nominal' />
            <column-instance column='[attacker_outcome]' derivation='Count' name='[cnt:attacker_outcome:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[attacker_outcome]' derivation='None' name='[none:attacker_outcome:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_outcome:nk] * [federated.1h8fquv0bcnftl1bk8m0s19gattm].[cnt:attacker_outcome:qk])</rows>
        <cols>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:location:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='attacker command'>
      <table>
        <view>
          <datasources>
            <datasource caption='battles' name='federated.1h8fquv0bcnftl1bk8m0s19gattm' />
          </datasources>
          <datasource-dependencies datasource='federated.1h8fquv0bcnftl1bk8m0s19gattm'>
            <column datatype='string' name='[attacker_commander]' role='dimension' type='nominal' />
            <column datatype='string' name='[attacker_outcome]' role='dimension' type='nominal' />
            <column-instance column='[attacker_outcome]' derivation='Count' name='[cnt:attacker_outcome:qk]' pivot='key' type='quantitative' />
            <column-instance column='[attacker_commander]' derivation='None' name='[none:attacker_commander:nk]' pivot='key' type='nominal' />
            <column-instance column='[attacker_outcome]' derivation='None' name='[none:attacker_outcome:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[cnt:attacker_outcome:qk]</rows>
        <cols>([federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_commander:nk] / [federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_outcome:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='attacker king'>
      <table>
        <view>
          <datasources>
            <datasource caption='battles' name='federated.1h8fquv0bcnftl1bk8m0s19gattm' />
          </datasources>
          <datasource-dependencies datasource='federated.1h8fquv0bcnftl1bk8m0s19gattm'>
            <column datatype='string' name='[attacker_king]' role='dimension' type='nominal' />
            <column datatype='string' name='[attacker_outcome]' role='dimension' type='nominal' />
            <column-instance column='[attacker_outcome]' derivation='Count' name='[cnt:attacker_outcome:qk]' pivot='key' type='quantitative' />
            <column-instance column='[attacker_king]' derivation='None' name='[none:attacker_king:nk]' pivot='key' type='nominal' />
            <column-instance column='[attacker_outcome]' derivation='None' name='[none:attacker_outcome:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[cnt:attacker_outcome:qk]</rows>
        <cols>([federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:year:ok] / ([federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_king:nk] / [federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_outcome:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='defender command'>
      <table>
        <view>
          <datasources>
            <datasource caption='battles' name='federated.1h8fquv0bcnftl1bk8m0s19gattm' />
          </datasources>
          <datasource-dependencies datasource='federated.1h8fquv0bcnftl1bk8m0s19gattm'>
            <column datatype='string' name='[attacker_outcome]' role='dimension' type='nominal' />
            <column-instance column='[attacker_outcome]' derivation='Count' name='[cnt:attacker_outcome:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[defender_1]' role='dimension' type='nominal' />
            <column datatype='string' name='[defender_2]' role='dimension' type='nominal' />
            <column datatype='string' name='[defender_3]' role='dimension' type='nominal' />
            <column datatype='string' name='[defender_4]' role='dimension' type='nominal' />
            <column datatype='string' name='[defender_commander]' role='dimension' type='nominal' />
            <column-instance column='[attacker_outcome]' derivation='None' name='[none:attacker_outcome:nk]' pivot='key' type='nominal' />
            <column-instance column='[defender_1]' derivation='None' name='[none:defender_1:nk]' pivot='key' type='nominal' />
            <column-instance column='[defender_2]' derivation='None' name='[none:defender_2:nk]' pivot='key' type='nominal' />
            <column-instance column='[defender_3]' derivation='None' name='[none:defender_3:nk]' pivot='key' type='nominal' />
            <column-instance column='[defender_4]' derivation='None' name='[none:defender_4:nk]' pivot='key' type='nominal' />
            <column-instance column='[defender_commander]' derivation='None' name='[none:defender_commander:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:defender_commander:nk]' value='344' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>(([federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:defender_commander:nk] / ([federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:defender_1:nk] / ([federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:defender_2:nk] / ([federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:defender_3:nk] / ([federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:defender_4:nk] / [federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_outcome:nk]))))) * [federated.1h8fquv0bcnftl1bk8m0s19gattm].[cnt:attacker_outcome:qk])</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='defender king'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>JofferyåRobbèµ¢å¾å¤ï¼è¾å¾ä¹å¤ï¼æä»¥å½çä¸ä¸å®æ¯å¶èå³é®</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='battles' name='federated.1h8fquv0bcnftl1bk8m0s19gattm' />
          </datasources>
          <datasource-dependencies datasource='federated.1h8fquv0bcnftl1bk8m0s19gattm'>
            <column datatype='string' name='[attacker_outcome]' role='dimension' type='nominal' />
            <column-instance column='[attacker_outcome]' derivation='Count' name='[cnt:attacker_outcome:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[defender_king]' role='dimension' type='nominal' />
            <column-instance column='[attacker_outcome]' derivation='None' name='[none:attacker_outcome:nk]' pivot='key' type='nominal' />
            <column-instance column='[defender_king]' derivation='None' name='[none:defender_king:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[cnt:attacker_outcome:qk]</rows>
        <cols>([federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:defender_king:nk] / [federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_outcome:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='major_capture'>
      <table>
        <view>
          <datasources>
            <datasource caption='battles' name='federated.1h8fquv0bcnftl1bk8m0s19gattm' />
          </datasources>
          <datasource-dependencies datasource='federated.1h8fquv0bcnftl1bk8m0s19gattm'>
            <column datatype='integer' name='[major_capture]' role='measure' type='quantitative' />
            <column-instance column='[major_capture]' derivation='Sum' name='[sum:major_capture:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[sum:major_capture:qk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='major_death'>
      <table>
        <view>
          <datasources>
            <datasource caption='battles' name='federated.1h8fquv0bcnftl1bk8m0s19gattm' />
          </datasources>
          <datasource-dependencies datasource='federated.1h8fquv0bcnftl1bk8m0s19gattm'>
            <column datatype='string' name='[attacker_outcome]' role='dimension' type='nominal' />
            <column datatype='string' name='[battle_type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[major_death]' role='measure' type='quantitative' />
            <column-instance column='[attacker_outcome]' derivation='None' name='[none:attacker_outcome:nk]' pivot='key' type='nominal' />
            <column-instance column='[battle_type]' derivation='None' name='[none:battle_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[major_death]' derivation='Sum' name='[sum:major_death:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:battle_type:nk] * [federated.1h8fquv0bcnftl1bk8m0s19gattm].[sum:major_death:qk])</rows>
        <cols>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_outcome:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='year,summer'>
      <table>
        <view>
          <datasources>
            <datasource caption='battles' name='federated.1h8fquv0bcnftl1bk8m0s19gattm' />
          </datasources>
          <datasource-dependencies datasource='federated.1h8fquv0bcnftl1bk8m0s19gattm'>
            <column datatype='string' name='[attacker_outcome]' role='dimension' type='nominal' />
            <column-instance column='[attacker_outcome]' derivation='Count' name='[cnt:attacker_outcome:qk]' pivot='key' type='quantitative' />
            <column-instance column='[attacker_outcome]' derivation='None' name='[none:attacker_outcome:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[summer]' derivation='Sum' name='[sum:summer:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[summer]' role='measure' type='quantitative' />
            <column datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1h8fquv0bcnftl1bk8m0s19gattm].[cnt:attacker_outcome:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1h8fquv0bcnftl1bk8m0s19gattm].[sum:summer:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_outcome:nk] * ([federated.1h8fquv0bcnftl1bk8m0s19gattm].[cnt:attacker_outcome:qk] + [federated.1h8fquv0bcnftl1bk8m0s19gattm].[sum:summer:qk]))</rows>
        <cols>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:year:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='å·¥ä½è¡¨ 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='battles' name='federated.1h8fquv0bcnftl1bk8m0s19gattm' />
          </datasources>
          <datasource-dependencies datasource='federated.1h8fquv0bcnftl1bk8m0s19gattm'>
            <column datatype='string' name='[attacker_commander]' role='dimension' type='nominal' />
            <column datatype='string' name='[attacker_king]' role='dimension' type='nominal' />
            <column datatype='string' name='[attacker_outcome]' role='dimension' type='nominal' />
            <column aggregation='Median' datatype='integer' name='[attacker_size]' role='measure' type='quantitative' />
            <column aggregation='Median' datatype='integer' name='[defender_size]' role='measure' type='quantitative' />
            <column-instance column='[attacker_commander]' derivation='None' name='[none:attacker_commander:nk]' pivot='key' type='nominal' />
            <column-instance column='[attacker_king]' derivation='None' name='[none:attacker_king:nk]' pivot='key' type='nominal' />
            <column-instance column='[attacker_outcome]' derivation='None' name='[none:attacker_outcome:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[attacker_size]' derivation='Sum' name='[sum:attacker_size:qk]' pivot='key' type='quantitative' />
            <column-instance column='[defender_size]' derivation='Sum' name='[sum:defender_size:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1h8fquv0bcnftl1bk8m0s19gattm].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1h8fquv0bcnftl1bk8m0s19gattm].[sum:attacker_size:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1h8fquv0bcnftl1bk8m0s19gattm].[sum:defender_size:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1h8fquv0bcnftl1bk8m0s19gattm].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_outcome:nk] / ([federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_king:nk] / [federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_commander:nk]))</rows>
        <cols>([federated.1h8fquv0bcnftl1bk8m0s19gattm].[:Measure Names] * [federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:year:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='å·¥ä½è¡¨ 17'>
      <table>
        <view>
          <datasources>
            <datasource caption='battles' name='federated.1h8fquv0bcnftl1bk8m0s19gattm' />
          </datasources>
          <datasource-dependencies datasource='federated.1h8fquv0bcnftl1bk8m0s19gattm'>
            <column datatype='string' name='[attacker_king]' role='dimension' type='nominal' />
            <column-instance column='[attacker_king]' derivation='None' name='[none:attacker_king:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[region]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_king:nk]</rows>
        <cols>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:region:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='éä¸­å¨ä½æ¹'>
      <table>
        <view>
          <datasources>
            <datasource caption='battles' name='federated.1h8fquv0bcnftl1bk8m0s19gattm' />
          </datasources>
          <datasource-dependencies datasource='federated.1h8fquv0bcnftl1bk8m0s19gattm'>
            <column datatype='string' name='[attacker_king]' role='dimension' type='nominal' />
            <column datatype='string' name='[attacker_outcome]' role='dimension' type='nominal' />
            <column-instance column='[attacker_outcome]' derivation='Count' name='[cnt:attacker_outcome:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[defender_king]' role='dimension' type='nominal' />
            <column-instance column='[attacker_king]' derivation='None' name='[none:attacker_king:nk]' pivot='key' type='nominal' />
            <column-instance column='[defender_king]' derivation='None' name='[none:defender_king:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:defender_king:nk]' value='104' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_king:nk]' value='180' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1h8fquv0bcnftl1bk8m0s19gattm].[cnt:attacker_outcome:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_king:nk]</rows>
        <cols total='true'>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:defender_king:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='å·¥ä½è¡¨ 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_commander:nk]</field>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_king:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='year,summer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_outcome:nk]</field>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name=' Region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='98'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_outcome:nk]</field>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Location'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='attacker king'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_king:nk]</field>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_outcome:nk]</field>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:year:ok]</field>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='defender king'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='100'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:defender_king:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='attacker command'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_commander:nk]</field>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_outcome:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='defender command'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='BattleType'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='98'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_outcome:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_outcome:nk]</field>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:battle_type:nk]</field>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='AttackerSize'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='DefenderSize'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='A/D Size'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:battle_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='A/D è¡¨æ ¼'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_outcome:nk]</field>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_size:qk]</field>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:battle_type:nk]</field>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:defender_size:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='A/D è¡¨æ ¼ (3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_outcome:nk]</field>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_size:qk]</field>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:battle_type:nk]</field>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:defender_size:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='A/D è¡¨æ ¼ (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:name:nk]' type='color' />
            <card pane-specification-id='2' param='[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:battle_type:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_outcome:nk]</field>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_size:qk]</field>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:battle_type:nk]</field>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:defender_size:qk]</field>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='major_capture'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='major_death'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:battle_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='éä¸­å¨ä½æ¹'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_king:nk]</field>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:attacker_outcome:nk]</field>
            <field>[federated.1h8fquv0bcnftl1bk8m0s19gattm].[none:defender_king:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='å·¥ä½è¡¨ 17'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name=' Region' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='A/D Size' width='192'>
      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
      hKtJAISrSQCEq0kAhKtJAISrSQCEqzXtXqA7nw1V3vk09+0/q/JkAxep1ExeeGPuA7cT7wpy
      ZiK59zc2QdMCMH3lNTZyZXyd/QRrKdazJYYmzzDW19msQ4h9rlip8S8/f/0Dt3Nusv/gBcDr
      8+FkS/i9BpbWxcdOPsz12SXsRATbtrEsq6WPz2hl+7ZtY5rmgX38Ryv7xjRNVFVFURTMenM+
      qm/bdtv6umkByOTKnD13hkuXbuI1NKqVIo5ioKoqqqqiaRqG0boH6LWy/TufDmtl/a3Uyr7x
      eDzouo5hGHj05gRAVdW29XXT3gQPD8R5/eIlEoMjDMbDvHl1juHhgWY1L0RLNG0E6O4d4Yne
      kTtf8UTySLOaFqJlZBlUuJoEQLiaBEC4mgRAuJoEQLiaBEC4mgRAuJoEQLiaBEC4mgRAuJoE
      QLiaBEC4mgRAuJoEQLiaBEC4mgRAuJoEQLiaBEC4mgRAuJoEQLiaBEC4mgRAuJoEQLiaBEC4
      mgRAuJoEQLiaBEC4mgRAuFrTHo47d+0NltN59EiSI91wY3GTk4+epSugN+sQQjRd0wIwOvko
      8dgK62UPa9spzj48yczSMp3HRu5+j+M4zTrc+2pV+3e2f2p1/a3Ulr5p2iHa19dN3SNsZWOL
      wfHjTO9soxs+HKeO4zjYtn13l5VWsSyrZe1bltXy+lup1X1zp/1mHcOxnbb1dfMCUNmi7u3B
      r3vw1nO8+PIrHD157u4OMaqqouutmw5pmtay9u/scNPK+luplbV7PJ67u8R49HpT2lRafK68
      W9MCoPqjnDh6+8/HTp/nWLMaFqKFZBVIuJoEQLiaBEC4mgRAuJoEQLiaBEC4mgRAuJoEQLia
      BEC4mgRAuJoEQLiaBEC4mgRAuJoEQLiaBEC4mgRAuJoEQLiaBEC4mgRAuJoEQLiaBEC4mgRA
      uJoEQLiaBEC4mgRAuJoEQLiaBEC4mgRAuFrTAuDYdRZnp8nky1SLOWbnljAP7uP0hUs0LQBz
      U29T1fxois2N6zdw6nluzq03q3khWqJpj0ff2slTy5ao14fRgp2Mjg5xfXYR245j2zaWZVGr
      1Zp1uPdoZft3NsdoZf2t1Mq+MU0TVVVRFAWz3pxNLWzbbltfNy0AkVAnXQOjzE7P4FUdUqlV
      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
    </thumbnail>
    <thumbnail height='192' name='A/D è¡¨æ ¼' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='A/D è¡¨æ ¼ (2)' width='192'>
      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
      BlbR/wMkzenu5x5YCQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='144' name='A/D è¡¨æ ¼ (3)' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='84' name='AttackerSize' width='144'>
      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
      kjo0IAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='BattleType' width='192'>
      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
      1WXdQwDbvn45lXsPDdt7frZ8JjU7cYXjJ05jYnBt9CInTo3YMS4hHLHlALR2D9BcWwV46No9
      RCy0/T4UJdzrnt8GFeJe2vI1wPiFk0xML5NTK/BklpheWkOtjNHXvn3PC4V7bDkA3YPDdA9+
      9FMXg5stLMTnjJwCCVeTAAhXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhX
      kwAIV5MACFeTAAhX21oAjDwXT5/h+mIcQ8vwwfGjfDAyJq37xLaxtfcBFC/Nza2sGXlSy4vU
      9gyjLF5hrQg13vUYWJa19a4Em9hY39I0uIP+miX5/Sg3Xuov9/g3sopFKNrQC9XrRfGvv5rq
      5PyXm2UYUChsvZCqogQCwFYDoHoJBHyQLWKZJr5gBV6/gm6Aoay3ojVNE92OjfI2NtZf+/4P
      yB07vuWa4T/8NlVPP/2p+uWW/unPSP34pS3XqXr2GcLf/gPA2fkvt8KFC6z+zd9tuY6vq5O6
      7/41sNUAFJKceP894vkCBx98kKsfvoUVjHKkH7w3Wg55PB58vlv3w7fDxvp2fd2BR/24ZrnH
      v5Hqsaf9oKKqjo3fyfkx7JofRbk55q0FoCLMF55+5uaPrU1NWyonhNPkLpBwNQmAcDUJgHA1
      CYBwNQmAcDUJgHA1CYBwNQmAcDUJgHA1CYBwNQmAcDUJgHA1CYBwNQmAcDUJgHA1CYBwNQmA
      cDXbAqAXMpx67zijU4vSFUJsG7YFID4zTqTrfszlSVLOvCMtxJZt+WtSP1LT1MG10ydJJBJE
      B6ASHcuyMAwDTdPsWs2n6Lp+s75pmrbU3DjmjfXLzTAMW+qYpunY+J2cH7u6T1iWdXPMtgUA
      VSEUqSFvBakN/GZXCP+NHjXl4PV6b9ZXVZu6QmwY88b65eaxqeuBqqqOjd/J+TG99myuiqJ8
      PD+2VAQ8viANTU3s6qvBq9hVVYjysi0AqsdHbazOrnJCOEJugwpXkwAIV5MACFeTAAhXkwAI
      V5MACFeTAAhXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhXkwAIV7PtjbDs
      2iwnPryM4qvkocceIijREtuAbQGwLIvK6jAez3pJwzBudoWw623+W9lY37Ls6QphmubNmuUe
      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
      V5MACFf7f5Pg+DvgeHb6AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='84' name='DefenderSize' width='144'>
      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
    </thumbnail>
    <thumbnail height='192' name='Location' width='192'>
      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
      D4uIU2Se0hOkAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='attacker command' width='192'>
      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
      A4gr7/yvQ6txdAMefbIuPwgTV97Ep5y//M33eetdi2c/CfDHNusP1iku36BWyl7i5gnxak0s
      gKZp5HK5T/9CUUjlS1QKmZMZU37RZ4j5V//1B3TNyR/t8su3l/i1d5dlhphfsNzvfXCf//f4
      YOLXK/kUv/EXv/rqZ4iZKPAZDU2Gtks2lXgtZoj56EmDgwv+PcNCMY2qrsoMMb9guc2DHj9+
      sD/x69cWcsRisVc/Q8zEhekp7ty5M09UiNeKTJMqIk0KICJNCiAiTQogIk0KICJNCiAiTQog
      Ik0KICJNCiAiTQogIk0KICJNCiAiTQogIk0KICJNCiAiTQogIk0KICJNCiAiTQogIk0KICJN
      CiAiTQogIk0KICJNCiAiTQogIk0KICJNCiAiTQogIk0KICJtrgIEvsvTp1uveluEuHRzfTy6
      qukYRpwwDE8mqljfbnHQnfz5+0k9xntvLOD7Pvc2m7T6o4m5TFLnnRsVfN/noycH9CxnYq6Q
      TnB7tYjv+/x0fR/LHk/MVXJJ1hYyhGE4c+KLZ69j3gky/vje3oW5tVqerB5iOy4/fli/MPfG
      coGkFmAOHX52wUQQAHdWS8QVn5454qOnzQtzb69VUAKfVs/i3lbrwtx7t46OxUF7wPpu58Lc
      L71Zw/d9dps9ntZ7F+a+8dYSvu+zWe+y3exPzKiKcpJ7stdmr2VOzOkx7WS9YXjx0QjDEM/z
      8H2fuxsN2oPJk59kkzpvH59THz4+oD+cfE4VMwZfWM7PVwB/bNOo10llC+QzSTRN4w9/vM63
      f/R4Yn65nOVf//2/gKZp/P53P+G7H29PzN2+Vua3/+6fRdM0fueP7l44O8gv3V7iH/2tb6Fp
      Gv/+2x/yeG/yQfy1967z9/7K1wiCYObEF6qqvtAEGb/9H793Ye5v//mv8P57K4z9cGruN//q
      N/jG7SqDkTs191t/81t86Vqeenc4NfdPf+N9rleSPK33p+b+5W/+OUppjYdbbf75f/r+hbl/
      +w/+Erqm8eH9Ov/m935yYe6//OO/hqZp/PDeFv/hDz+amIlrKr/7T/46mqbxf3/2lP/2wYOJ
      uWLG4N/91l+eOQmJoignE2T89w8e8sd3dybmvrhW4Z/9nV9H0zT+8//+hI+fNibmvv7WMv/w
      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
      4+hAT5sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='attacker king' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='defender command' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='defender king' width='192'>
      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
      8xiVXOxZLf8KVk1sBIXuzX8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='major_capture' width='116'>
      iVBORw0KGgoAAAANSUhEUgAAAHQAAADACAYAAADVwUdEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFCElEQVR4nO3dX2iVdRzH8Y8exW2xzI3mLPpPhQtiFrYKYZK5kC5W3SioGAuc07KiLCxI
      CvpzJf2jmoQsG8OLQIUyUlzFRmNJtSDThFZdhJu5LTc625qP62JsujM3K92e3/mc9+tq53l2
      4Ht483ue7bk4v2mDg4ODgo3pcQ+Ai4ugZghqhqBmCGqGoGYIamZG3ANMpmQyec7jURRN8SRT
      Z1qmPVhIJpPKycmJe4xJwyXXDEHNpME9NFLfsR/0+f4v1PRtrh56vULFZ53rPrpPH9Z+pkPt
      vVL2XN2+/HE9fFe+EjFOHKfwg7Yd0LbaLt25qlLlp+pGn/vjgGr2/q3Sqte0bl6WTncd1q63
      atRQ9JQWz45n3LiFH7SwTBs3Df3Yknoub4k2PJEYWY2JOfO16LYGfd8rKUODpvc9NJEYdWmN
      Opr0ceu1WlAY20SxC3+F/isDam/coe0/FWnthjLlxz1OjNI/aNStb+re149Fa/TMI5n7x9Cw
      NA8a6chHNTpW+phWXz0z7mGCkN730JMNqh+4V8uIOSL8R38t21X5bvOYwyVV1apI1Gj9201K
      fTJbUlWtiuIxb5Hk/+gv/KAXmXvQ9L7kYgyCmiGoGYKaIagZgpohqBmCmiGoGYKaIagZgpoh
      qBmCmiGoGYKaIagZgpohqBmCmiGoGYKaIagZgpohqBmCmiGoGYKaIagZgpohqBmCmiGoGYKa
      IagZgpohqBmCmiGoGYKaIagZgpohqBmCmiGoGYKaCfwbrSfas0Ua6GpV85d71dD4l4qfflbL
      MnjzgGFhr9C2A9pWe0T5SytVfmvqyRbtfLNe/Tev1Moll8cxXZDCXqET7dmiYq3eMrRe236d
      wpkCF/YKxX8W9gq9QOPtH9rT0zPue1a9+slkjTMpajffP+q1ddBzfbd8MplUbm5uDNNMjtTP
      wiXXDEHNhH3JTd2zpXno55KqalUUfqqXtuzW78Pndjdrt6QrH3hRL2TwP6Ts25Ki/LmdUzjN
      hdvzyopRr7nkmiGoGYKaIagZgpohqBmCmiGoGYKaIagZgpohqBmCmiGoGYKaIagZgpohqBmC
      miGoGYKaIagZgpohqBmCmiGoGYKaIagZgpohqBmCmiGoGYKaIagZgpohqBmCmiGoGYKaIagZ
      gpohqBmCmiGoGYKaIagZgpohqBmCmiGoGYKaIagZgpohqBmCmgl7I57zbAgbdTSpZmudvj4R
      KfuqUq19crmKLolt2CCEvUIn3BC2Tfveq9ecNS/rneo3tHlxh3Z80Ky+OOYMSNhBC8u0cdNy
      3TEvS4nUc798pYPXPKjymy5VQjM1d9EKLe05qO8yvGjYQSdy8k/l3XD9WaHzNP+WGerojHGm
      AAR+Dx1ff3+fcrKzRh2bnjiu48clXTH0+v9sCJtuUj9L2gadNStLyd4+SWeino4KVFBw5nfY
      EDadzL5MnT+3Kho50KnDh04pPy/GmQKQvkGvu1sLf9ulPUe7FWlA7Y07tT93oRZknf+tzsK+
      5E60IWxxocrW3aOarc9r/YlI2Tfep0erSpThPdkQNhUbwiIoBDVDUDMENUNQMwQ1Q1AzBDVD
      UDMENUNQMwQ1Q1AzBDVDUDMENUNQMwQ1Q1AzBDVDUDMENUNQMwQ1Q1AzBDVDUDMENUNQMwQ1
      Q1AzBDVDUDMENUNQMwQ1Q1AzBDVDUDMENUNQMwQ1Q1AzBDVDUDMENUNQMwQ1Q1Az/wAKSSVL
      B4urdgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='major_death' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAWYklEQVR4nO3daXAc533n8W/33APM4BhwcB/ExfsWRVKiSOqyY9oxrUSUFcVWrPjY2lSl
      clSqUpUXqfLWVm1VsrVJJaVsNrGlda0l27Rj2pRES6JNUzxFigQvgACI+74xOObAXN37AhIp
      SqQ5koGZAM//84oz1eD8p2d+008//TxPa6ZpmgihIE3TND3TRQiRSRIAoTQJgFCaBEAoTQIg
      lCYBEEqTAAilSQAUE4uM09E+RFKu/gASgCVrqvsSPz1xaf5BcJgfHnqT2RT+Ljh+g9ePnCea
      XJy6EpON/Pg/LhJZnP9+wVkzXYBITaCrgWPvNqN7itm9dztX3vw5b7QahEMRNju7OHr0XWZi
      MR598iGSvVe5fHMET9kGPrN3A4mJHk6dfJcZZylbqhMAzE3309A+yY7tq2g//w6XOyep3/kk
      G0qhqbEbWyxEvGg1W6v9t4sw4/Rdv8Dpxl6KV+/k4S0r6Wm+RG7FJrLDnbQEbExff4s3jk4S
      t83y2c/uI9h6kvNNQxSv28WmcgvvnTzDpO5n995d5EV6OH69n2RgDHdxDcz0MZEsYv/+nTDa
      ylsnGnAUrWbPw1vx2rVF2a9yBFgSDOYiMRxZXgItZ3jtdAfltTUUVdayc2MdpZW1rPCXsm3n
      ZvxuG9F4kuxsC9ePvszF/hmOfv9VpnPqWF9Tgk03CE70cvjQYeYcOYxfO8aRC91kZRkcffVl
      2gaGeP3lf+PKjIuyAs8dVQS6GvjR8SY2bFtP76lDnGydpOnSO4zMxpkbvMbZzhA1tVUUFtaw
      afNqbIOn+N7RNlZu3EJpnoXTh19l2FVNud7D//vZWYIDV/hlY4DaNSWceeMNXCVVTJx7i2u9
      3Rx69SgRRzbd53/Bmxe7Fm3PSgCWgsQM18+co28qQiKeJByK4/P78foKqS0vJM9XiMebT1Vt
      Bfb4JGffvchsJI4RmyYUGmN83M+uR7aypr4aj9NKcLyb7tEkFWV+Rnu7mQnFicVtbNq5kxwH
      OErW8LlHtuH3uu4oY2pskNzyDaxftYGtdT46Bsa441TCYsfvL8Cb46eiopjwQCvZm/ayfd0q
      qsudTI5obNm+nZ3bNjE7MkwIyC6soLamilxvNtW1dVTkOAiPj3FjJADJGIU1m1hV6l20XSsB
      WAqMBFMTEdy+XLxZDgDcXh+x3kZeP3ONiO6k0jrO66+dondiklA4iTcvD7fdCrZSqmsD/PyV
      n3D0+DkmggmKVu3huSdX8sZ/HCO/fiPOZBCL24PDZsE0TBwOO7r+8a+Gv6KecPdZjhz9Ob9q
      mmFbfRmWWIhzJ47x6/NNROMGevYKmLjEiRMNOGt2Er94mENHfsHZq1OU17n45eFD/OC1E5TU
      13Gvr7W1oIwdxQ4Cc3ay3U7AWLRdq8lo0KXAYGaoi5b+aXJzvTi9Kyj3OejtuMlwzM3mNZXM
      jfbS0htk5ZpqoiOdjEZseB0m+RXr8BgTtN3sJGLLpbYij+mAQWlJFr3dIxRVlxHoaaN/bJYs
      Xykry/IYHwlQUl5OpP3X/MMPT96q4omv/iVr7CO0D0yQU1RNbcUKZofbae+fIS/fgzWnhAqf
      g76Wa4zHsli1rp65oZt0Dk6TU1pDeZ5O9812QrqHuvoa3PEJekIuqv12+npGKKooY6avF0tx
      Ja7IMM1t/SStWVTW1uL3Ohd8r2qapkkAhLJkOLRQ3se6QQ3DoKenJxO1CJF20gRaIF1dXaxc
      uTLTZYhPQJpAQnkSAKE0CYBQmgRAKE0CIJQmARBKkwAIpUkAhNJkQkyKTCNJNBolaeo4nA6s
      +uJM0BDpJQFIiUl/02nO3RjB4vLx4O5dlOe7M12UWAASgFTERmjps/LEl36fXJsGyK//ciEB
      SMXMJOPRaU4e+TGmp5zdu7ezIttOLBa7tYlhGMzNzWWwSPFpSABSYbHg8VXx6IM1RPqucqGp
      m/076rHZbLc20XUdh8ORwSLFpyEBSEVOGYXxcwxM+HFGDZzO+S++pt3ZFProY/Gfn3SDpkLP
      YsMDaxlpOk/LlIOt9eWZrkgsEJkPsEBkPsDSI/MBhPIkAEJpEgChNAmAUJrS3aCmYZBIJDAB
      TdOx2qxyjVcxCgcgxrHv/S9OtM+ACf6qvXztW58lN9NlibRSOADD9A+W8eff/gp+hfeC6hT8
      6KP0t3YwFg5hOHu5+G4DxVkazuxCaupKsGe6PJFWCgYgzlBHGzcDQVxFlQR6mgkAOX6NCgmA
      chQMQDbb9x9gO0O89aMuHvryQ3iSQ7x9uINEpksTaadgACA01cXJt4/y1psDDGn9uGMjtAyV
      syPThYm0UzIAusVBTn4eXm+QvPx8sizFvLD/AXIyXZhIOyUD4PKU8NATT1NZ2U0IwIRkKEQ8
      34Xtfn8slhUlAzAvyunXX+Ls1SQ12/LBv5evf7lAAqAYhYdCjBMMVrKutobPPP8U7rFpFunW
      ueI/MYUDUERJjZPK6iTf+4dXGDJMlXeGshRuArnYsm01py7P8PyXtzEcLyMr0yWJtFP4Ry/A
      L187yo2zHThW5tP+9kUCmS5JpJ3CR4AwiUQ+vhwn8ZlpZkzjvr8Gt2ePasj89+VB4SNAKQ8+
      XMTE3E1e+sfX2bh/928eCWomGWt8hxdffoXBYLpqFItNwSNAjOHOXibnYpC/gS8crCah2fC5
      TeJwz27Q6MwozQEXm6s86SxWLDIFAxCl6/plmidGaTrfRtX2jbiDvXSYD/I3f7H/HgFI0tfW
      QXH9ZoKtI7eejcfjt5pFhmEQjUbT8g7EwlEwAB52HTjILvr4zuBxPv/8VylM3uQ7/9REFMj+
      2PYmob6rXB6MssrZQ9/QGNGhcUo9BVitt3efrut3rBQnlgYFA/ABP8UF3fzr3/097sQEVB+4
      y5f/fW4/daVJopEwsVicaHx+3OhHV4LTdYVPqZYotRfGMpIERgeYMbMpK8zDksKa/31t1/CU
      byTXeefzsjDW0pPywljtZ17j7YYuEoaJMdPGqasjd92u7b13GJ6DtuYGBsfDC1rsotAt5BVV
      UFmcz+jN8xw72XrfPymv+/iXXyxdKQXAjNqYDXQyHo5jJsNMB2N33S4yO03MgHB4llh8aY2s
      iYZnmJxeAqEVCyqlAOi2LDatyudG8wCJ9xtM430NXLgxBsxw5hfnmF3EIoVYLCmftWWVrsU3
      10nf5Pyvv5lMkEiagEkinmSpn0hoaLK8uYJS77bQHKysKaPjZtutp4xkkrnZaQKhyGLUtsim
      aWno4oN7uuSU1LB+VVFGKxLpl1IAHB4PNsBTWE6x04E92052XinTrW9z5FeXISsLC+Dy5uLQ
      wZ3lwW6zLG7lvzULbZeP0dI3RTweJ7ugkjV1EgDVKNwNOsL/+atvc2bGwsrifFZUPsJX//iJ
      Tz0vWLpBlx5N0zSFA2AQj0aZnZ4ibski1+vG/lusDSoBWHo0TdMUvhIM1375Km9c6CVhWNjx
      1B/zua1lsjiuYhQOwBCXLsV54a//luLodV78t/NMbS0jP9NlibRSOABOHLYpWm/cZHqujbg3
      R5ZFVJCSo7dM08Q083niwMMMNZ7nUrfB5w7sJEvV0yGFKXkSPNl/jSsd0wRuXKM/9v6KoLqV
      /JoHeW7/dj5NB66cBC89yp4EZxdUsckVZ9ZfwGrDmH/SCHL2jSZG9m+nJLPliTRSMgB2pxef
      E8KDTVy/2kPchBz/Wp75y+fuPSdALEtKngPMG+bNw29z88IYZbVeAgkLTrv9UzV/xNKlcACi
      WK1llJXayFlZS6Spa36hXKEUJZtA8yrY/sRqNDPMT/7lEJU7n5Lmj4KU7AX6QGQ2wGw4SiQy
      h8vjw+fzfOomkPQCLT3K9gLNC/CTf/o72hLZOKxQUL6TZ59//B6D4Uwm+27w7qVmyK3ioR1b
      yHXJ2cJyoHAAYujONXzjvzyD3wqabrn3leDoBF0jJg/s+x1CnVdp7h1i16qydBYrFonCAcjH
      ZWnk/744gdehkV/6AF86uBvv3Ta1+9i6zYdpJAjZnHjd87PiP9p6VLg1uWQpHIBhxqbq+Mqf
      PUuhXUfTbdxzsQdNIxGeoq25kXhOPevLCgBIJBKyMtwSp3AAcsh2D3H9chOj7vn7hq1eV4Hj
      bpsaUdobm3FVb2GNz31rZegPrwSn6zpOp6yXstQoHACTivoNjEz20z8J3oJs6u616Wwvpxua
      cLV1chao3PIYu9cWp7FWsViU7gZNmWmQSCb5YE/pugWL5c5riNINuvQo3g36CWg6VqvCF82X
      MflUhdIkAEJpEgChNAmAUJoEQChNAiCUJgEQSpMACKVJAITSJABCaRIAoTQJgFCaBCBFRjJO
      OBQkEo0j42eXDxkNmpI4reeOcXUwCLYc9j62j+Kcu06dEUuMHAFSMdNHV7KCp37/aR6pzWdg
      bDzTFYkFIgFIgREO4l5RhMOik5+fRXgunumSxAKRAKRAs1qJRiKYQCwGToesCbRcSABSoOUW
      4xxppn1wlBudvXhcsojiciEBSIU1j23ba+m9cgG9ZD21JXmZrkgsEJkUv0BkUvzSc9dJ8ZKH
      T0/23dJz1wD09vZmopYlLRgM0tPTk+kyxCckTaAFIk2gpUfTNE1OgoXSJABCaRIAoTQJgFCa
      BEAoTQIglCYBEEqTAAilyYywFMXDkzReucpk0sOmLRsoyJYZYcuBBCAVZpTGd88Q8a+jPseJ
      3aJluiKxQCQAqQgNMKxV8/j66nvfS1gsSRKAVITDTEx08NNXLhHDzcaHH2VzlY9YLHbHbVIj
      kUiGC116rnaM8vc/Op+21/viQ7U8s2/NrccSgFRkeyn01/DIQ2sxRpo43jfO5iofdvvt44Gu
      67hcrgwWuTTZbDYSSSNtr6fpljs+JwlAKtylVLtu8vabPZhJg4qNOzNdkVggEoCUWFi55RF8
      M0EM3Y7XI3OClwsJQIp0q4PcfOn6XG7kQphQmgRAKE0CIJQmARBKU/gk2CQWDjIbipA0wWpz
      k5OXjSx6qBaFAzDJd//2vzFSUIpbh4KyHTz93F68mS5LpJWCATBJJpOYZozcsm387rf+gCK7
      Bpouv/4KUjAAUxx7+VUuDgcY7mml4X/0kOPQWFHxEM8+/xg5mS5PpJWCAchh33Nf4+FkhPHh
      CHlFuVjMKJOTSWQkj3oU7AXSsTsdWC3jnDrSQMRiwaJNcvrIBWYzXZpIOwWPADAz2sgPvvsq
      Zy5N0jbXiDMRJX/jF5ERPupRMgCegtV8+Vtfo/D1PrZ9YStuzUK2NwcZ6aMeJQNgsTrJX7GW
      LRv7OPaTQ0QNyC/Zyhee2oUn08WJtFLwHOADg7x15DRjbSbb99RjuLLlCKAghQNg4HSXUFyc
      JOrMIXCljWCmSxJpp2QTaF4pu35nC5oR5uc/PUHlg5+X5o+CFD4CJJnqeo9/f+k6B57bw0wg
      hNwpRD0KB2CE641hSj3Z2EqKsDR3M5XpkkTaKRwAD3m5cwyOdPHrVw4zUl5834FwRmiEK403
      CcmN4pcNBc8BTIykgUkWe790EE9ZKyGbh8d3bP2NvUBmMkJLQyMtY5OsqKwny5a2gsUiUjAA
      0xz//iEaRu5s8ARm7Dz9B3vueRSYGe1h3FVOnU/6ipYTBQPgYdeBg2xODPOzfz/Hnm98kfzp
      Rn58+t47w4hO0d45zdoHHqD33ZZbz8vKcL+9WCyW1tdLJBJ3fE4KBsBCVm4eWcQwE7OYOHF5
      sokOdhIG3B/b3mSi8wpnLzfT2N7CxHAvBfFqnn9ivawMtwA+vA/TwWq1yspw8wrZ93glh//1
      fxJM2th54I8ouOt2GivW7ONP1+wDoOGdIxRuXZ/GOsViWtAAmMkEkXgCl8OJluIK4vFYGAMn
      Dnv6O6Tqdh3gz7d8hjhWrGaUqekIuTm/+Vd89dY9WD9+mBBL1IJ+6+IzkzS2d3+iC0oTA830
      jM4tZBmp0zTsLjdZLjtDLed462TLff/E7cnFLnMnl40UjgAG08N9dA9NYPf6WVlZSjw4xsTI
      OFMRE39RLlNjE7gKKih2mkRnxmi8Ooczr4SaCj+zY0M4fMXYopME4m4K3AnaWjuImHYqauvB
      SDA52M2VsQS+imrKfTIqX6RPCkcAg+B0gGB4jr6eZvqGZhnouE5n/zTGdAcn3mtjLhajvbWR
      UNwkHAphYjLQfI7m4Tk6r71HIAbRsXau9waYar9Cy2iQWCzCXMwgGQ0zNDIOiQAXr3Uv+hsW
      4sPufwRIzDE6MsrYeJDpYBBnwQz+LB/ry+vwO/sIdfnYus7D9cZrJA2dvOIqNqxbzWypleaB
      qY/dUcVbWoGt7QqjMRfeogg5Li/rtqyhvizC7KnRxXmXKdAtVmxWaduo5v5HgGSYqbiLtRs2
      UF2Sf5+lQ0zCU2N0dbZy/UovucV56Fqc/s52Gm+0E5pLMhfVqayvozjPxvjYNOm7NcJHjXL0
      +28xGZ8/YylevZMn96zKWDUiM+5/BHAUsLFunObeCXzV6ynIycVuceJw2MFSSG2ZE3QbJWVV
      uLM8VOS7GRgcJ7/uQVYVOphlM01tw3gqNrGxMA+7K0SkfZI5LZe1q0twxJxk6XZAp7a2aPHf
      8S255GYPce7STfauL0XTbWRlyZQY1aRwEqzjq1jL7ooPP/fBiWoexb75f/kK/ABUr91G9Ye2
      9BbWsKuw5kPPZLFtl//2Q+eKW6UUFzs/UfG/nQAdN/pov9zFe29q+Ct384cvPCHrAilG6Qth
      B//0v9LZ3knE7qO+plImxChI4QBEeP2lf2bAuZLsSD+nbnyGPzn4oNwGVTEKzwcYY3K6ime+
      9jwvfPP3sLf1MJPpkkTaKXwE8LPC2853/vd38UU6iNcflJWhFaRkAGLhKQKhJLuf/gYVvf1E
      7bsoKykgGoljd8lMF5UoGYBQoJ+WrgA9p0/RFX1/fqOZJGiv59t/85W7DIkWy5WSAcgrXc/e
      UmD3I7efNMJcO36NEHebEyCWKyUDMC/K8Vf+mTdODZBd5MJT/hjffOFxOQ9QjMK9QMO0tRmU
      56/mmW8+hd+TjUPXSHEag1gmFD4CeMjxZZGnz/Dr41eZ6s4hzE7SeS1aZJ7CAcjjc394EDM5
      x5Vr7RTt20RupksSaadwADSCo900905hAJPDE0TLfXKbJMUoHIA+fvjiT8l7+AG8VsA+d++p
      nMkQ1y+co7F9kIQ1hx2PPkZ9kYwcWg4UDkAetRtqWP3okxQ5wWJ13Lv9b0LBys383vbHCXZe
      o312GiQAy4LCAYgzMdDGz37wfTx2jfySLXz+S/e4Q4w1i+IiN9HAAC0TSapX583/D/Hbi4Qa
      hpH2RZ6Wg3gikdbXSyaTd3xOSgfAlbuWZ7/+LIU20HTLbxgJajI10EHzcIi1G9aR+/7EGYvl
      9vw4XdfveCxSY9HTu88++jkpHACT/uZf8Y//vYNsO/ir9vD815+8+4SYRICWrmnW7diK13b7
      SoGu33kZRQLwyel6eq+8aJomAZjn5y9efOnWia+m6fee7xwJMzLUSuurjQBUbXuSvetL0lGk
      WGQKB0DDaktx5KenjAMHn1vcckRGKDwUQggJgFCcBEAoTQIglCYBEEqTAAilSQCE0iQAQmkS
      AKE0CYBQmgRAKE0CIJQmARBKkwCkKDTRw6lfHaOhZYBY5u7rJBaYBCAViWkuX2ghr3oVwb5r
      dA1PZboisUD+P+2X2pgh60gtAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='year,summer' width='192'>
      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
      4yzabF5mAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='å·¥ä½è¡¨ 1' width='192'>
      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
      jDQZAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='164' name='å·¥ä½è¡¨ 17' width='192'>
      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
    </thumbnail>
    <thumbnail height='184' name='éä¸­å¨ä½æ¹' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAC4CAYAAAC1reOrAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAaVklEQVR4nO3de1wU9f7H8dcJFcQrwVHTUjORyl+msl4IWBUMDckbpgaGKZpoGmSZ/rCU
      NPmlZlqKiYUGJWmlJ0nTSEA3vIQoWV5STMFS0QN2QrnGnvn9MYsuKBdhxXQ+z8fDx0OY78x8
      Z5n3zndmZ/bzD0VRFITQqHtudweEuJ0kAELTJABC0yQAQtMkAELTJABC0yQAQtMkAELTJABC
      0yQAQtMkAELTJABC0yQAQtMkAELTJABC0yQAQtMkAELTJABC0yQAQtMkAELTJABC0yQAQtMk
      AELTJABC0yQAQtMkAELTJABC0yQAQtMkAELTJABC0yQAQtMkAELTJABC0yQAQtMkAELTJABC
      0yQAQtMkAELTJABC0yQAQtMkAELTJABC0yQAQtMkAELTJABC0yQAQtMkAELTJABC0yQAQtMk
      AELTJABC0yQAQtMkAELTJABC0yQAQtMkAELTJABC0yQAQtMkAELTJABC0yQAQtMkAELTJABC
      0yQAQtMkAELTJABC0yQAQtPqVdUgNTW1LvohxG3xD0VRlNvdCSFuFxkCCU2TAAhNkwAITZMA
      CE2rRQAyifbXodNNYMMFs18bwtD5R5NZzfnDDDc7nxCWU+sjQNeusHptCkZL9EaIOlbrANzv
      9wJPJm0gPtcS3RGibtX+HKBeT4YPP82Hn524flpmNP7mw5ryPwtxm1nkJLjTmCA6borFkGeJ
      pQlRdyxzFaiRJ6P67yVmy4Wq2wrxN2Khy6BWOAeMhzUxHCixzBKFqAuW+xygpQ8jH48jdusf
      ZX+f9Rtni8CYn8H3W/aRZbEVClF7FvwgrBFeE8Zwetfua7+63x1vx0RecXXhyYAITrV2xMFy
      KxSi1uRuUKFpciuE0DQJgNA0CYDQNAmA0LQqnwnOz8+vi34IcVvIEUBomgRAaJoEQGiaBEBo
      2l0RAGPquwx9Ywdyui5uVpVXgSp2htjAMaxKL/25Po3bdsE35E0CdU2rmDWWwDEZjDOE4lbz
      DpgY2Ru/ncf6BGF7JpbAMatILzPdkaBPo/BrW+sV1VAxJ7cuYslqA0f+KKR+47Z0GTSRmUF9
      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
      b4ArxAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
